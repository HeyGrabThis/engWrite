import { useEffect, useState } from 'react';
import axios from 'axios';

const SentenceWrite = () => {
  //선택된 단어 디자인 바꾸기
  let [selected, setSelected] = useState([]);
  const changeWordDesign = (idx) => {
    if (selected[idx] === false) {
      let copy = [...selected];
      copy[idx] = true;
      setSelected(copy);
    }
  };
  // 문장들은 db에서 가져오기
  const [korSentence, setKorSentence] = useState('');
  const [engSentence, setEngSentence] = useState([]);
  const [engSentenceAns, setEngSentenceAns] = useState([]);
  //한글 문장이 바뀌면 영어 문장 찢어둔거 가져오기
  useEffect(() => {
    axios
      .get('/api/sentences')
      .then((res) => {
        let sentences = res.data;
        if (!sentences) {
          console.log('데이터 없음');
        }
        setKorSentence(sentences.kor);
        setEngSentence(sentences.eng);
        setEngSentenceAns(sentences.engAnswer);
        //selected에도 넣기 => 각각 선택된 상태를 저장하기위해
        let falseArr = sentences.eng.map((elm) => {
          return (elm = false);
        });
        setSelected(falseArr);
      })
      .catch((err) => {
        console.log(err);
      });
  }, []);

  return (
    <div className='write-background'>
      <div className='question-background'>
        <div className='question-homeButton'>
          <svg
            xmlns='http://www.w3.org/2000/svg'
            width='3.5vh'
            height='3.5vh'
            viewBox='0 0 24 24'
            fill='none'
          >
            <path
              d='M20 8.00001L14 2.74001C13.45 2.24805 12.7379 1.97607 12 1.97607C11.2621 1.97607 10.55 2.24805 10 2.74001L4 8.00001C3.68237 8.28408 3.4289 8.63256 3.25647 9.02225C3.08404 9.41194 2.99661 9.83389 3 10.26V19C3 19.7957 3.31607 20.5587 3.87868 21.1213C4.44129 21.6839 5.20435 22 6 22H18C18.7956 22 19.5587 21.6839 20.1213 21.1213C20.6839 20.5587 21 19.7957 21 19V10.25C21.002 9.82557 20.9138 9.40555 20.7415 9.01769C20.5691 8.62983 20.3164 8.28296 20 8.00001ZM14 20H10V15C10 14.7348 10.1054 14.4804 10.2929 14.2929C10.4804 14.1054 10.7348 14 11 14H13C13.2652 14 13.5196 14.1054 13.7071 14.2929C13.8946 14.4804 14 14.7348 14 15V20ZM19 19C19 19.2652 18.8946 19.5196 18.7071 19.7071C18.5196 19.8946 18.2652 20 18 20H16V15C16 14.2044 15.6839 13.4413 15.1213 12.8787C14.5587 12.3161 13.7956 12 13 12H11C10.2043 12 9.44129 12.3161 8.87868 12.8787C8.31607 13.4413 8 14.2044 8 15V20H6C5.73478 20 5.48043 19.8946 5.29289 19.7071C5.10536 19.5196 5 19.2652 5 19V10.25C5.00018 10.108 5.03059 9.9677 5.08922 9.83839C5.14784 9.70907 5.23333 9.59372 5.34 9.50001L11.34 4.25001C11.5225 4.08969 11.7571 4.00127 12 4.00127C12.2429 4.00127 12.4775 4.08969 12.66 4.25001L18.66 9.50001C18.7667 9.59372 18.8522 9.70907 18.9108 9.83839C18.9694 9.9677 18.9998 10.108 19 10.25V19Z'
              fill='rgb(75,75,75)'
            />
          </svg>
        </div>
        <div className='question-arrowButtons'>
          <svg
            xmlns='http://www.w3.org/2000/svg'
            width='28'
            height='28'
            viewBox='0 0 16 16'
            fill='none'
          >
            <path
              d='M15 8L2.5 8'
              stroke='rgb(97, 97, 97)'
              strokeWidth='2'
              strokeLinecap='round'
            />
            <path
              d='M8 1.5L1.78284 7.71716C1.62663 7.87337 1.62663 8.12663 1.78284 8.28284L8 14.5'
              stroke='rgb(97, 97, 97)'
              strokeWidth='2'
              strokeLinecap='round'
            />
          </svg>
          <svg
            xmlns='http://www.w3.org/2000/svg'
            width='28'
            height='28'
            viewBox='0 0 16 16'
            fill='none'
          >
            <path
              d='M1.5 8L14 8'
              stroke='rgb(97, 97, 97)'
              strokeWidth='2'
              strokeLinecap='round'
            />
            <path
              d='M8.5 1.5L14.7172 7.71716C14.8734 7.87337 14.8734 8.12663 14.7172 8.28284L8.5 14.5'
              stroke='rgb(97, 97, 97)'
              strokeWidth='2'
              strokeLinecap='round'
            />
          </svg>
        </div>
        <div className='question-sentence'>
          <span className='question-sentenceKor'>
            {korSentence ? korSentence : null}
          </span>
        </div>

        <div className='answer-sentence'>
          <div className='delBtn' style={{ visibility: 'hidden' }}>
            <svg
              xmlns='http://www.w3.org/2000/svg'
              width='24'
              height='24'
              viewBox='0 0 24 24'
              fill='none'
            >
              <path
                d='M19 5H9.83C9.03462 5.0007 8.27207 5.31723 7.71 5.88L2.29 11.29C2.19627 11.383 2.12188 11.4936 2.07111 11.6154C2.02034 11.7373 1.9942 11.868 1.9942 12C1.9942 12.132 2.02034 12.2627 2.07111 12.3846C2.12188 12.5064 2.19627 12.617 2.29 12.71L7.71 18.12C8.27207 18.6828 9.03462 18.9993 9.83 19H19C19.7956 19 20.5587 18.6839 21.1213 18.1213C21.6839 17.5587 22 16.7956 22 16V8C22 7.20435 21.6839 6.44129 21.1213 5.87868C20.5587 5.31607 19.7956 5 19 5ZM20 16C20 16.2652 19.8946 16.5196 19.7071 16.7071C19.5196 16.8946 19.2652 17 19 17H9.83C9.56523 16.9963 9.31163 16.8927 9.12 16.71L4.41 12L9.12 7.29C9.31163 7.10727 9.56523 7.00368 9.83 7H19C19.2652 7 19.5196 7.10536 19.7071 7.29289C19.8946 7.48043 20 7.73478 20 8V16ZM16.71 9.29C16.617 9.19627 16.5064 9.12188 16.3846 9.07111C16.2627 9.02034 16.132 8.9942 16 8.9942C15.868 8.9942 15.7373 9.02034 15.6154 9.07111C15.4936 9.12188 15.383 9.19627 15.29 9.29L14 10.59L12.71 9.29C12.5217 9.1017 12.2663 8.99591 12 8.99591C11.7337 8.99591 11.4783 9.1017 11.29 9.29C11.1017 9.4783 10.9959 9.7337 10.9959 10C10.9959 10.2663 11.1017 10.5217 11.29 10.71L12.59 12L11.29 13.29C11.1963 13.383 11.1219 13.4936 11.0711 13.6154C11.0203 13.7373 10.9942 13.868 10.9942 14C10.9942 14.132 11.0203 14.2627 11.0711 14.3846C11.1219 14.5064 11.1963 14.617 11.29 14.71C11.383 14.8037 11.4936 14.8781 11.6154 14.9289C11.7373 14.9797 11.868 15.0058 12 15.0058C12.132 15.0058 12.2627 14.9797 12.3846 14.9289C12.5064 14.8781 12.617 14.8037 12.71 14.71L14 13.41L15.29 14.71C15.383 14.8037 15.4936 14.8781 15.6154 14.9289C15.7373 14.9797 15.868 15.0058 16 15.0058C16.132 15.0058 16.2627 14.9797 16.3846 14.9289C16.5064 14.8781 16.617 14.8037 16.71 14.71C16.8037 14.617 16.8781 14.5064 16.9289 14.3846C16.9797 14.2627 17.0058 14.132 17.0058 14C17.0058 13.868 16.9797 13.7373 16.9289 13.6154C16.8781 13.4936 16.8037 13.383 16.71 13.29L15.41 12L16.71 10.71C16.8037 10.617 16.8781 10.5064 16.9289 10.3846C16.9797 10.2627 17.0058 10.132 17.0058 10C17.0058 9.86799 16.9797 9.73728 16.9289 9.61542C16.8781 9.49356 16.8037 9.38296 16.71 9.29Z'
                fill='rgb(242, 246, 255)'
              />
            </svg>
          </div>
          {engSentence
            ? engSentence.map((elm, idx) => {
                return <div key={idx} className='answer-sentenceWord'></div>;
              })
            : null}
          <div className='delBtn'>
            <svg
              xmlns='http://www.w3.org/2000/svg'
              width='24'
              height='24'
              viewBox='0 0 24 24'
              fill='none'
            >
              <path
                d='M19 5H9.83C9.03462 5.0007 8.27207 5.31723 7.71 5.88L2.29 11.29C2.19627 11.383 2.12188 11.4936 2.07111 11.6154C2.02034 11.7373 1.9942 11.868 1.9942 12C1.9942 12.132 2.02034 12.2627 2.07111 12.3846C2.12188 12.5064 2.19627 12.617 2.29 12.71L7.71 18.12C8.27207 18.6828 9.03462 18.9993 9.83 19H19C19.7956 19 20.5587 18.6839 21.1213 18.1213C21.6839 17.5587 22 16.7956 22 16V8C22 7.20435 21.6839 6.44129 21.1213 5.87868C20.5587 5.31607 19.7956 5 19 5ZM20 16C20 16.2652 19.8946 16.5196 19.7071 16.7071C19.5196 16.8946 19.2652 17 19 17H9.83C9.56523 16.9963 9.31163 16.8927 9.12 16.71L4.41 12L9.12 7.29C9.31163 7.10727 9.56523 7.00368 9.83 7H19C19.2652 7 19.5196 7.10536 19.7071 7.29289C19.8946 7.48043 20 7.73478 20 8V16ZM16.71 9.29C16.617 9.19627 16.5064 9.12188 16.3846 9.07111C16.2627 9.02034 16.132 8.9942 16 8.9942C15.868 8.9942 15.7373 9.02034 15.6154 9.07111C15.4936 9.12188 15.383 9.19627 15.29 9.29L14 10.59L12.71 9.29C12.5217 9.1017 12.2663 8.99591 12 8.99591C11.7337 8.99591 11.4783 9.1017 11.29 9.29C11.1017 9.4783 10.9959 9.7337 10.9959 10C10.9959 10.2663 11.1017 10.5217 11.29 10.71L12.59 12L11.29 13.29C11.1963 13.383 11.1219 13.4936 11.0711 13.6154C11.0203 13.7373 10.9942 13.868 10.9942 14C10.9942 14.132 11.0203 14.2627 11.0711 14.3846C11.1219 14.5064 11.1963 14.617 11.29 14.71C11.383 14.8037 11.4936 14.8781 11.6154 14.9289C11.7373 14.9797 11.868 15.0058 12 15.0058C12.132 15.0058 12.2627 14.9797 12.3846 14.9289C12.5064 14.8781 12.617 14.8037 12.71 14.71L14 13.41L15.29 14.71C15.383 14.8037 15.4936 14.8781 15.6154 14.9289C15.7373 14.9797 15.868 15.0058 16 15.0058C16.132 15.0058 16.2627 14.9797 16.3846 14.9289C16.5064 14.8781 16.617 14.8037 16.71 14.71C16.8037 14.617 16.8781 14.5064 16.9289 14.3846C16.9797 14.2627 17.0058 14.132 17.0058 14C17.0058 13.868 16.9797 13.7373 16.9289 13.6154C16.8781 13.4936 16.8037 13.383 16.71 13.29L15.41 12L16.71 10.71C16.8037 10.617 16.8781 10.5064 16.9289 10.3846C16.9797 10.2627 17.0058 10.132 17.0058 10C17.0058 9.86799 16.9797 9.73728 16.9289 9.61542C16.8781 9.49356 16.8037 9.38296 16.71 9.29Z'
                fill='rgb(242, 246, 255)'
              />
            </svg>
          </div>
        </div>
        <div className='choice-sentence'>
          {engSentence
            ? engSentence.map((elm, idx) => {
                return (
                  <div
                    key={idx}
                    className={`choice-sentenceWord ${
                      selected[idx] ? 'active' : ''
                    }`}
                    onClick={() => {
                      changeWordDesign(idx);
                    }}
                  >
                    {elm}
                  </div>
                );
              })
            : null}
        </div>
      </div>
    </div>
  );
};

export default SentenceWrite;
